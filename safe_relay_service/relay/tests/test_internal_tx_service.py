from typing import List, Optional

from django.db.models import Q

from eth_account import Account
from hexbytes import HexBytes
from web3.datastructures import AttributeDict

from gnosis.safe.tests.test_safe_service import TestSafeService

from ..models import InternalTx, SafeContract, SafeTxStatus
from ..services import InternalTxService
from .factories import (SafeContractFactory, SafeCreation2Factory,
                        SafeTxStatusFactory)


class ParityMock:
    def trace_filter(self, from_block: int = 1, to_block: Optional[int] = None,
                     from_address: Optional[List[str]] = None, to_address: Optional[List[str]] = None,
                     after: Optional[int] = None, count: Optional[int] = None):
        return [{'action': {'from': '0x32Be343B94f860124dC4fEe278FDCBD38C102D88',
                            'gas': 312333,
                            'value': 1162600000000000000000,
                            'callType': 'call',
                            'input': HexBytes('0x'),
                            'to': '0x8bbB73BCB5d553B5A556358d27625323Fd781D37'},
                 'blockHash': '0x86df301bcdd8248d982dbf039f09faf792684e1aeee99d5b58b77d620008b80f',
                 'blockNumber': 3068183,
                 'result': {'gasUsed': 0,
                            'output': HexBytes('0x')},
                 'subtraces': 0,
                 'traceAddress': [],
                 'transactionHash': '0x3321a7708b1083130bd78da0d62ead9f6683033231617c9d268e2c7e3fa6c104',
                 'transactionPosition': 3,
                 'type': 'call'},
                {'action': {'from': '0x3B169a0Fb55ea0B6bAFe54c272b1Fe4983742BF7',
                            'gas': 301835,
                            'value': 0,
                            'init': HexBytes('0x608060405234801561001057600080fd5b5060405161060a38038061060a833981018060405281019080805190602001909291908051820192919060200180519060200190929190805190602001909291908051906020019092919050505084848160008173ffffffffffffffffffffffffffffffffffffffff1614151515610116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f496e76616c6964206d617374657220636f707920616464726573732070726f7681526020017f696465640000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506000815111156101a35773ffffffffffffffffffffffffffffffffffffffff60005416600080835160208501846127105a03f46040513d6000823e600082141561019f573d81fd5b5050505b5050600081111561036d57600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102b7578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f436f756c64206e6f74207061792073616665206372656174696f6e207769746881526020017f206574686572000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61036c565b6102d1828483610377640100000000026401000000009004565b151561036b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f436f756c64206e6f74207061792073616665206372656174696f6e207769746881526020017f20746f6b656e000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b5b5050505050610490565b600060608383604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808251602084016000896127105a03f16040513d6000823e3d60008114610473576020811461047b5760009450610485565b829450610485565b8151158315171594505b505050509392505050565b61016b8061049f6000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634555d5c91461008b5780635c60da1b146100b6575b73ffffffffffffffffffffffffffffffffffffffff600054163660008037600080366000845af43d6000803e6000811415610086573d6000fd5b3d6000f35b34801561009757600080fd5b506100a061010d565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb610116565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006002905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a7230582007fffd557dfc8c4d2fdf56ba6381a6ce5b65b6260e1492d87f26c6d4f1d0410800290000000000000000000000008942595a2dc5181df0465af0d7be08c8f23c93af00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000d9e09beaeb338d81a7c5688358df0071d498811500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b15f91a8c35300000000000000000000000000000000000000000000000000000000000001640ec78d9e00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000004000000000000000000000000f763ea5fbb191d47dc4b083dcdc3cdfb586468f8000000000000000000000000ad25c9717d04c0a12086a1d352c1ccf4bf5fcbf80000000000000000000000000da7155692446c80a4e7ad72018e586f20fa3bfe000000000000000000000000bce0cc48ce44e0ac9ee38df4d586afbacef191fa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')},
                 'blockHash': '0x03f9f64dfeb7807b5df608e6957dd4d521fd71685aac5533451d27f0abe03660',
                 'blockNumber': 3793534,
                 'result': {'gasUsed': 288831,
                            'code': HexBytes('0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634555d5c91461008b5780635c60da1b146100b6575b73ffffffffffffffffffffffffffffffffffffffff600054163660008037600080366000845af43d6000803e6000811415610086573d6000fd5b3d6000f35b34801561009757600080fd5b506100a061010d565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb610116565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006002905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a7230582007fffd557dfc8c4d2fdf56ba6381a6ce5b65b6260e1492d87f26c6d4f1d041080029'),
                            'address': '0x61A7cc907c47C133d5ff5b685407201951fcBD08'},
                 'subtraces': 2,
                 'traceAddress': [],
                 'transactionHash': '0x6c7e8f8778d33d81b29c4bd7526ee50a4cea340d69eed6c89ada4e6fab731789',
                 'transactionPosition': 1,
                 'type': 'create'},
                {'action': {'from': '0x8bbB73BCB5d553B5A556358d27625323Fd781D37',
                            'gas': 301835,
                            'value': 0,
                            'init': HexBytes('0x608060405234801561001057600080fd5b5060405161060a38038061060a833981018060405281019080805190602001909291908051820192919060200180519060200190929190805190602001909291908051906020019092919050505084848160008173ffffffffffffffffffffffffffffffffffffffff1614151515610116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f496e76616c6964206d617374657220636f707920616464726573732070726f7681526020017f696465640000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506000815111156101a35773ffffffffffffffffffffffffffffffffffffffff60005416600080835160208501846127105a03f46040513d6000823e600082141561019f573d81fd5b5050505b5050600081111561036d57600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102b7578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f436f756c64206e6f74207061792073616665206372656174696f6e207769746881526020017f206574686572000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61036c565b6102d1828483610377640100000000026401000000009004565b151561036b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f436f756c64206e6f74207061792073616665206372656174696f6e207769746881526020017f20746f6b656e000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b5b5050505050610490565b600060608383604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808251602084016000896127105a03f16040513d6000823e3d60008114610473576020811461047b5760009450610485565b829450610485565b8151158315171594505b505050509392505050565b61016b8061049f6000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634555d5c91461008b5780635c60da1b146100b6575b73ffffffffffffffffffffffffffffffffffffffff600054163660008037600080366000845af43d6000803e6000811415610086573d6000fd5b3d6000f35b34801561009757600080fd5b506100a061010d565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb610116565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006002905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a7230582007fffd557dfc8c4d2fdf56ba6381a6ce5b65b6260e1492d87f26c6d4f1d0410800290000000000000000000000008942595a2dc5181df0465af0d7be08c8f23c93af00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000d9e09beaeb338d81a7c5688358df0071d498811500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b15f91a8c35300000000000000000000000000000000000000000000000000000000000001640ec78d9e00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000004000000000000000000000000f763ea5fbb191d47dc4b083dcdc3cdfb586468f8000000000000000000000000ad25c9717d04c0a12086a1d352c1ccf4bf5fcbf80000000000000000000000000da7155692446c80a4e7ad72018e586f20fa3bfe000000000000000000000000bce0cc48ce44e0ac9ee38df4d586afbacef191fa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')},
                 'blockHash': '0x03f9f64dfeb7807b5df608e6957dd4d521fd71685aac5533451d27f0abe03660',
                 'blockNumber': 3793534,
                 'result': {'gasUsed': 288831,
                            'code': HexBytes('0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634555d5c91461008b5780635c60da1b146100b6575b73ffffffffffffffffffffffffffffffffffffffff600054163660008037600080366000845af43d6000803e6000811415610086573d6000fd5b3d6000f35b34801561009757600080fd5b506100a061010d565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb610116565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006002905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a7230582007fffd557dfc8c4d2fdf56ba6381a6ce5b65b6260e1492d87f26c6d4f1d041080029'),
                            'address': '0x61A7cc907c47C133d5ff5b685407201951fcBD08'},
                 'subtraces': 2,
                 'traceAddress': [],
                 'transactionHash': '0x6c7e8f8778d33d81b29c4bd7526ee50a4cea340d69eed6c89ada4e6fab731789',
                 'transactionPosition': 2,
                 'type': 'create'}
                ]


class EthereumClientMock:
    def __init__(self, *args, **kwargs):
        self.parity = ParityMock()
        self.current_block_number = kwargs.get('current_block_number', 2000)

    def get_transaction_receipt(self, tx_hash, timeout=None):
        return AttributeDict({'blockHash': HexBytes('0x86df301bcdd8248d982dbf039f09faf792684e1aeee99d5b58b77d620008b80f'),
                              'blockNumber': 3068183,
                              'contractAddress': None,
                              'cumulativeGasUsed': 140911,
                              'from': '0x32be343b94f860124dc4fee278fdcbd38c102d88',
                              'gasUsed': 21000,
                              'logs': [],
                              'logsBloom': HexBytes('0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'),
                              'root': '0x1f100686c7c69b438afc767ba304389722688755a7a4d10e39bd20a16add322b',
                              'status': None,
                              'to': '0x8bbb73bcb5d553b5a556358d27625323fd781d37',
                              'transactionHash': HexBytes('0x3321a7708b1083130bd78da0d62ead9f6683033231617c9d268e2c7e3fa6c104'),
                              'transactionIndex': 3})

    def get_transaction(self, tx_hash):
        return AttributeDict({'blockHash': HexBytes('0x86df301bcdd8248d982dbf039f09faf792684e1aeee99d5b58b77d620008b80f'),
                              'blockNumber': 3068183,
                              'chainId': '0x1',
                              'condition': None,
                              'creates': None,
                              'from': '0x32Be343B94f860124dC4fEe278FDCBD38C102D88',
                              'gas': 333333,
                              'gasPrice': 30000000000,
                              'hash': HexBytes('0x3321a7708b1083130bd78da0d62ead9f6683033231617c9d268e2c7e3fa6c104'),
                              'input': '0x',
                              'nonce': 198446,
                              'publicKey': HexBytes('0x027c7bd9ef503f22e752db1b684ff18ea3cd4179ea6b46dcedb66372e9d4b9aa03be088f43e57f866d16a4cf6d12d02a8d6f24c863f242939eb0e301b54c7664'),
                              'r': HexBytes('0xb0adea712451440e26ba5d023cb5b8c40c70b7486ad26268082be189827e45b3'),
                              'raw': HexBytes('0xf8718303072e8506fc23ac0083051615948bbb73bcb5d553b5a556358d27625323fd781d37893f0650ec47fd2400008026a0b0adea712451440e26ba5d023cb5b8c40c70b7486ad26268082be189827e45b3a007d309bbdc964c64a48f716d42c3fa3df4bef993e56d42524d0ef07fcf21d6c0'),
                              's': HexBytes('0x07d309bbdc964c64a48f716d42c3fa3df4bef993e56d42524d0ef07fcf21d6c0'),
                              'standardV': 1,
                              'to': '0x8bbB73BCB5d553B5A556358d27625323Fd781D37',
                              'transactionIndex': 3,
                              'v': 38,
                              'value': 1162600000000000000000})


class TestInternalTxService(TestSafeService):

    @classmethod
    def setUpTestData(cls):
        super().setUpTestData()
        cls.ethereum_client_mock = EthereumClientMock()
        cls.internal_tx_service = InternalTxService(cls.ethereum_client_mock)

    def test_get_safe_creation_block_number(self):
        safe_address = Account.create().address
        self.assertEqual(self.internal_tx_service.get_safe_creation_block_number(safe_address), 0)

        block_number = 111
        safe_contract = SafeContractFactory(address=safe_address)
        safe_creation_2 = SafeCreation2Factory(safe=safe_contract, block_number=block_number)
        self.assertEqual(self.internal_tx_service.get_safe_creation_block_number(safe_address), block_number)

        safe_creation_2.block_number = None
        safe_creation_2.save()
        self.assertEqual(self.internal_tx_service.get_safe_creation_block_number(safe_address),
                         self.ethereum_client_mock.get_transaction_receipt(None).blockNumber)

    def test_get_or_create_safe_tx_status(self):
        safe_address = Account.create().address

        with self.assertRaises(SafeContract.DoesNotExist):
            self.internal_tx_service.get_or_create_safe_tx_status(safe_address)

        SafeContractFactory(address=safe_address)
        safe_tx_status = self.internal_tx_service.get_or_create_safe_tx_status(safe_address)
        self.assertEqual(safe_tx_status.tx_block_number, 0)
        self.assertEqual(safe_tx_status.tx_block_number, safe_tx_status.initial_block_number)

    def test_process_internal_txs(self):
        address = '0x8bbB73BCB5d553B5A556358d27625323Fd781D37'
        safe_contract = SafeContractFactory(address=address)

        blocks_process_limit = 20
        self.assertIsNone(self.internal_tx_service.process_internal_txs([address],
                                                                        blocks_process_limit=blocks_process_limit))
        self.assertEqual(SafeTxStatus.objects.filter(safe=safe_contract).count(), 0)
        self.assertEqual(InternalTx.objects.filter(Q(_from=address) | Q(to=address)).count(), 0)
        SafeTxStatusFactory(safe=safe_contract)

        _, updated = self.internal_tx_service.process_internal_txs([address], blocks_process_limit=blocks_process_limit)
        self.assertFalse(updated)
        safe_tx_status = SafeTxStatus.objects.get(safe=safe_contract)
        self.assertEqual(safe_tx_status.tx_block_number, blocks_process_limit)
        self.assertEqual(InternalTx.objects.filter(Q(_from=address) | Q(to=address)).count(), 2)

        _, updated = self.internal_tx_service.process_internal_txs([address], blocks_process_limit=0)

        self.assertTrue(updated)
        safe_tx_status = SafeTxStatus.objects.get(safe=safe_contract)
        confirmations = self.internal_tx_service.confirmations
        self.assertEqual(safe_tx_status.tx_block_number,
                         self.internal_tx_service.ethereum_client.current_block_number - confirmations)
        self.assertEqual(InternalTx.objects.filter(Q(_from=address) | Q(to=address)).count(), 2)
